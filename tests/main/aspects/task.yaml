summary: Check the aspects API

# ubuntu-14.04-64's curl doesn't support --unix-socket
systems: [-ubuntu-14.04-*]

prepare: |
  snap install test-snapd-curl --edge --devmode
  snap alias test-snapd-curl.curl curl
  snap install --edge jq

debug: |
    cat response.txt || true

execute: |
  # write a value
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects -X POST -d '{"account": "system", "bundle": "network", "aspect": "wifi-setup", "field": "ssid", "value": "canonical"}' > response.txt
  jq -r '."status-code"' < response.txt | MATCH 200

  # read the same value
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects -X GET -d '{"account": "system", "bundle": "network", "aspect": "wifi-setup", "field": "ssid"}' > response.txt
  jq -r '."status-code"' < response.txt | MATCH 200
  jq -r '.result' < response.txt | MATCH "canonical"

  # delete it
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects -X POST -d '{"account": "system", "bundle": "network", "aspect": "wifi-setup", "field": "ssid"}' > response.txt
  jq -r '."status-code"' < response.txt | MATCH 200

  # check it was deleted
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects -X GET -d '{"account": "system", "bundle": "network", "aspect": "wifi-setup", "field": "ssid"}' > response.txt
  jq -r '."status-code"' < response.txt | MATCH 404
  jq -r '.result.message' < response.txt | MATCH 'cannot get field "ssid": no value was found under "wifi"'

  # write values using a placeholder access
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects -X POST -d '{"account": "system", "bundle": "network", "aspect": "wifi-setup", "field": "private.my-company", "value": "my-config"}' > response.txt
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects -X POST -d '{"account": "system", "bundle": "network", "aspect": "wifi-setup", "field": "private.your-company", "value": "your-config"}' > response.txt

  # check first value
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects -X GET -d '{"account": "system", "bundle": "network", "aspect": "wifi-setup", "field": "private.my-company"}' > response.txt
  jq -r '."status-code"' < response.txt | MATCH 200
  jq -r '.result' < response.txt | MATCH "my-config"

  # delete it
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects -X POST -d '{"account": "system", "bundle": "network", "aspect": "wifi-setup", "field": "private.my-company"}' > response.txt
  jq -r '."status-code"' < response.txt | MATCH 200

  # check it was deleted
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects -X GET -d '{"account": "system", "bundle": "network", "aspect": "wifi-setup", "field": "private.my-company"}' > response.txt
  jq -r '."status-code"' < response.txt | MATCH 404
  jq -r '.result.message' < response.txt | MATCH 'cannot get field "private.my-company": no value was found under "wifi.my-company"'

  # check second value remains
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects -X GET -d '{"account": "system", "bundle": "network", "aspect": "wifi-setup", "field": "private.your-company"}' > response.txt
  jq -r '."status-code"' < response.txt | MATCH 200
  jq -r '.result' < response.txt | MATCH "your-config"
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects -X POST -d '{"account": "system", "bundle": "network", "aspect": "wifi-setup", "field": "private.your-company"}' > response.txt

  # write a list
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects -X POST -d '{"account": "system", "bundle": "network", "aspect": "wifi-setup", "field": "ssids", "value": ["one", 2]}' > response.txt
  jq -r '."status-code"' < response.txt | MATCH 200

  # read the same value
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects -X GET -d '{"account": "system", "bundle": "network", "aspect": "wifi-setup", "field": "ssids"}' > response.txt
  jq -r '."status-code"' < response.txt | MATCH 200
  jq -r '.result' < response.txt | MATCH '["one", 2]'

  # check read-only access control works
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects -X POST -d '{"account": "system", "bundle": "network", "aspect": "wifi-setup", "field": "status", "value": "foo"}' > response.txt
  jq -r '."status-code"' < response.txt | MATCH 403
  jq -r '.result.message' < response.txt | MATCH 'cannot write field "status": only supports read access'

  # check write-only access control works
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects -X POST -d '{"account": "system", "bundle": "network", "aspect": "wifi-setup", "field": "password", "value": "foo"}' > response.txt
  jq -r '."status-code"' < response.txt | MATCH 200

  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects -X GET -d '{"account": "system", "bundle": "network", "aspect": "wifi-setup", "field": "password"}' > response.txt
  jq -r '."status-code"' < response.txt | MATCH 403
  jq -r '.result.message' < response.txt | MATCH 'cannot read field "password": only supports write access'

  # check get is hijacked and runs sysctl to get a value
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects -X GET -d '{"account": "system", "bundle": "sysctl", "aspect": "sysctl", "field": "user\\.max_inotify_watches"}' > response.txt
  jq -r '."status-code"' < response.txt | MATCH 200
  jq -r '.result' < response.txt | MATCH '^[0-9]+$'

  # check get with "all" is hijacked and runs 'sysctl -a'
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects -X GET -d '{"account": "system", "bundle": "sysctl", "aspect": "sysctl", "field": "all"}' > response.txt
  jq -r '."status-code"' < response.txt | MATCH 200
  SYSCTL_LINES=$(jq -r '.result' < response.txt |  sed 's/\\n/\n/g' | wc -l)
  # the threshold of 5 is arbitrary; we want to know there are many lines but if
  # we use 1 this could pass even when the result is an error message
  if [ "$SYSCTL_LINES" -le "5" ]; then
    echo "expected get of aspect \"sysctl\" with field \"all\" to return many lines but got $SYSCTL_LINES"
    exit 1
  fi

  # check set operations are rejected for sysctl hijacks
  curl -sS --unix-socket /run/snapd.socket localhost/v2/aspects -X POST -d '{"account": "system", "bundle": "sysctl", "aspect": "sysctl", "field": "user\\.max_inotify_watches", "value": "foo"}' > response.txt
  jq -r '."status-code"' < response.txt | MATCH 400
  jq -r '.result.message' < response.txt | MATCH 'cannot set aspect: unsupported operation'
